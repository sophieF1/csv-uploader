{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nexports.__esModule = true;\nvar crypto_extra_1 = __importDefault(require(\"crypto-extra\"));\nvar _data_1 = __importDefault(require(\"./_data\"));\nvar Word;\n(function (Word) {\n  Word[\"Adjective\"] = \"adjectives\";\n  Word[\"Noun\"] = \"nouns\";\n  Word[\"Verb\"] = \"verbs\";\n})(Word || (Word = {}));\nfunction randomFromArray(arr) {\n  return arr[crypto_extra_1[\"default\"].randomNumber({\n    max: arr.length - 1\n  })];\n}\nexports.randomFromArray = randomFromArray;\nfunction getPattern(count) {\n  switch (count) {\n    case 0:\n      return [];\n    case 1:\n      return [Word.Noun];\n    case 3:\n      return [Word.Adjective, Word.Noun, Word.Verb];\n    case 4:\n      return [Word.Adjective, Word.Noun, Word.Noun, Word.Verb];\n    case 2:\n    default:\n      return randomFromArray([[Word.Adjective, Word.Noun], [Word.Noun, Word.Verb]]);\n  }\n}\nexports.getPattern = getPattern;\nfunction getSalt(type, length) {\n  var charset;\n  switch (type) {\n    case \"string\":\n      charset = \"abcdefghijklmnopqrstuvwxyz\";\n      break;\n    case \"number\":\n      charset = \"0123456789\";\n      break;\n    case \"mixed\":\n    default:\n      charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n  }\n  return crypto_extra_1[\"default\"].randomString(length, charset);\n}\nexports.getSalt = getSalt;\nfunction default_1(opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  if (opts.char) {\n    console.log(\"namor.generate(): `char` option has been renamed to `separator`\");\n    opts.separator = opts.char;\n  }\n  if (opts.numbers) {\n    console.log(\"namor.generate(): `numbers` option has been renamed to `saltLength`/`saltType`\");\n    opts.saltLength = opts.numbers;\n    opts.saltType = \"number\";\n  }\n  if (opts.manly) {\n    console.log(\"namor.generate(): `manly` option is deprecated, use `subset` instead\");\n    opts.subset = \"manly\";\n  }\n  if (opts.words && (opts.words < 1 || opts.words > 4)) {\n    throw new TypeError(\"Word count must be between 1-4\");\n  }\n  opts.separator = opts.separator || \"-\";\n  opts.words = Number(opts.words !== undefined ? opts.words : 2);\n  opts.saltType = opts.saltType || \"mixed\";\n  opts.saltLength = Number(opts.saltLength !== undefined ? opts.saltLength : 5);\n  var dictionary = opts.subset ? _data_1[\"default\"][opts.subset] : _data_1[\"default\"];\n  var salt = opts.saltLength > 0 ? getSalt(opts.saltType, opts.saltLength) : null;\n  var name = getPattern(opts.words).map(function (type) {\n    return randomFromArray(dictionary[type]);\n  }).concat([salt]).filter(Boolean).join(opts.separator);\n  if (name.length > 63) {\n    throw new TypeError(\"Subdomains cannot be longer than 63 characters! Try shortening your trailing salt.\");\n  }\n  return name;\n}\nexports[\"default\"] = default_1;","map":{"version":3,"names":["__importDefault","mod","__esModule","exports","crypto_extra_1","require","_data_1","Word","randomFromArray","arr","randomNumber","max","length","getPattern","count","Noun","Adjective","Verb","getSalt","type","charset","randomString","default_1","opts","char","console","log","separator","numbers","saltLength","saltType","manly","subset","words","TypeError","Number","undefined","dictionary","salt","name","map","concat","filter","Boolean","join"],"sources":["/Users/shalks/Documents/dev/alphafx-csv-upload/node_modules/namor/dist/generate.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nvar crypto_extra_1 = __importDefault(require(\"crypto-extra\"));\nvar _data_1 = __importDefault(require(\"./_data\"));\nvar Word;\n(function (Word) {\n    Word[\"Adjective\"] = \"adjectives\";\n    Word[\"Noun\"] = \"nouns\";\n    Word[\"Verb\"] = \"verbs\";\n})(Word || (Word = {}));\nfunction randomFromArray(arr) {\n    return arr[crypto_extra_1[\"default\"].randomNumber({ max: arr.length - 1 })];\n}\nexports.randomFromArray = randomFromArray;\nfunction getPattern(count) {\n    switch (count) {\n        case 0:\n            return [];\n        case 1:\n            return [Word.Noun];\n        case 3:\n            return [Word.Adjective, Word.Noun, Word.Verb];\n        case 4:\n            return [Word.Adjective, Word.Noun, Word.Noun, Word.Verb];\n        case 2:\n        default:\n            return randomFromArray([\n                [Word.Adjective, Word.Noun],\n                [Word.Noun, Word.Verb],\n            ]);\n    }\n}\nexports.getPattern = getPattern;\nfunction getSalt(type, length) {\n    var charset;\n    switch (type) {\n        case \"string\":\n            charset = \"abcdefghijklmnopqrstuvwxyz\";\n            break;\n        case \"number\":\n            charset = \"0123456789\";\n            break;\n        case \"mixed\":\n        default:\n            charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n    }\n    return crypto_extra_1[\"default\"].randomString(length, charset);\n}\nexports.getSalt = getSalt;\nfunction default_1(opts) {\n    if (opts === void 0) { opts = {}; }\n    if (opts.char) {\n        console.log(\"namor.generate(): `char` option has been renamed to `separator`\");\n        opts.separator = opts.char;\n    }\n    if (opts.numbers) {\n        console.log(\"namor.generate(): `numbers` option has been renamed to `saltLength`/`saltType`\");\n        opts.saltLength = opts.numbers;\n        opts.saltType = \"number\";\n    }\n    if (opts.manly) {\n        console.log(\"namor.generate(): `manly` option is deprecated, use `subset` instead\");\n        opts.subset = \"manly\";\n    }\n    if (opts.words && (opts.words < 1 || opts.words > 4)) {\n        throw new TypeError(\"Word count must be between 1-4\");\n    }\n    opts.separator = opts.separator || \"-\";\n    opts.words = Number(opts.words !== undefined ? opts.words : 2);\n    opts.saltType = opts.saltType || \"mixed\";\n    opts.saltLength = Number(opts.saltLength !== undefined ? opts.saltLength : 5);\n    var dictionary = opts.subset ? _data_1[\"default\"][opts.subset] : _data_1[\"default\"];\n    var salt = opts.saltLength > 0 ? getSalt(opts.saltType, opts.saltLength) : null;\n    var name = getPattern(opts.words)\n        .map(function (type) { return randomFromArray(dictionary[type]); })\n        .concat([salt])\n        .filter(Boolean)\n        .join(opts.separator);\n    if (name.length > 63) {\n        throw new TypeError(\"Subdomains cannot be longer than 63 characters! Try shortening your trailing salt.\");\n    }\n    return name;\n}\nexports[\"default\"] = default_1;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}