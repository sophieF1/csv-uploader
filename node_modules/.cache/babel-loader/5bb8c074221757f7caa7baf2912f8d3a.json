{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nexports.__esModule = true;\nvar crypto_1 = __importDefault(require(\"crypto\"));\nvar utils_1 = require(\"./utils\");\nvar ALGORITHM = \"aes-256-ctr\";\nvar HMAC_ALGORITHM = \"sha256\";\nfunction getEncryptionKey(key) {\n  var encryptionKey = key || process.env.ENCRYPTION_KEY;\n  if (!encryptionKey) {\n    throw new Error(\"No encryption key was found\");\n  }\n  var cryptoKey = crypto_1[\"default\"].createHash(\"sha256\").update(encryptionKey).digest();\n  return cryptoKey;\n}\nfunction constantTimeCompare(val1, val2) {\n  if (val1.length !== val2.length) {\n    return false;\n  }\n  var sentinel = 0;\n  for (var i = 0, len = val1.length; i < len; i++) {\n    sentinel |= val1.charCodeAt(i) ^ val2.charCodeAt(i);\n  }\n  return sentinel === 0;\n}\nfunction encrypt(value, key) {\n  var iv = Buffer.from(crypto_1[\"default\"].randomBytes(16));\n  var encryptionKey = Buffer.from(getEncryptionKey(key));\n  var cipher = crypto_1[\"default\"].createCipheriv(ALGORITHM, encryptionKey, iv);\n  cipher.setEncoding(\"hex\");\n  cipher.write(utils_1.stringify(value));\n  cipher.end();\n  var cipherText = cipher.read();\n  var hmac = crypto_1[\"default\"].createHmac(HMAC_ALGORITHM, encryptionKey);\n  hmac.update(cipherText);\n  hmac.update(iv.toString(\"hex\"));\n  return cipherText + \"$\" + iv.toString(\"hex\") + \"$\" + hmac.digest(\"hex\");\n}\nexports.encrypt = encrypt;\nfunction decrypt(value, key) {\n  var cipher = value.split(\"$\");\n  var iv = Buffer.from(cipher[1], \"hex\");\n  var encryptionKey = Buffer.from(getEncryptionKey(key));\n  var hmac = crypto_1[\"default\"].createHmac(HMAC_ALGORITHM, encryptionKey);\n  hmac.update(cipher[0]);\n  hmac.update(iv.toString(\"hex\"));\n  if (!constantTimeCompare(hmac.digest(\"hex\"), cipher[2])) {\n    throw new Error(\"Encrypted payload has been tampered with\");\n  }\n  var decipher = crypto_1[\"default\"].createDecipheriv(ALGORITHM, encryptionKey, iv);\n  var decryptedText = decipher.update(cipher[0], \"hex\");\n  var final = \"\" + decryptedText + decipher.final();\n  try {\n    return JSON.parse(final);\n  } catch (err) {\n    return final;\n  }\n}\nexports.decrypt = decrypt;","map":{"version":3,"names":["__importDefault","mod","__esModule","exports","crypto_1","require","utils_1","ALGORITHM","HMAC_ALGORITHM","getEncryptionKey","key","encryptionKey","process","env","ENCRYPTION_KEY","Error","cryptoKey","createHash","update","digest","constantTimeCompare","val1","val2","length","sentinel","i","len","charCodeAt","encrypt","value","iv","Buffer","from","randomBytes","cipher","createCipheriv","setEncoding","write","stringify","end","cipherText","read","hmac","createHmac","toString","decrypt","split","decipher","createDecipheriv","decryptedText","final","JSON","parse","err"],"sources":["/Users/shalks/Documents/dev/alphafx-csv-upload/node_modules/crypto-extra/dist/encryption.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nvar crypto_1 = __importDefault(require(\"crypto\"));\nvar utils_1 = require(\"./utils\");\nvar ALGORITHM = \"aes-256-ctr\";\nvar HMAC_ALGORITHM = \"sha256\";\nfunction getEncryptionKey(key) {\n    var encryptionKey = key || process.env.ENCRYPTION_KEY;\n    if (!encryptionKey) {\n        throw new Error(\"No encryption key was found\");\n    }\n    var cryptoKey = crypto_1[\"default\"]\n        .createHash(\"sha256\")\n        .update(encryptionKey)\n        .digest();\n    return cryptoKey;\n}\nfunction constantTimeCompare(val1, val2) {\n    if (val1.length !== val2.length) {\n        return false;\n    }\n    var sentinel = 0;\n    for (var i = 0, len = val1.length; i < len; i++) {\n        sentinel |= val1.charCodeAt(i) ^ val2.charCodeAt(i);\n    }\n    return sentinel === 0;\n}\nfunction encrypt(value, key) {\n    var iv = Buffer.from(crypto_1[\"default\"].randomBytes(16));\n    var encryptionKey = Buffer.from(getEncryptionKey(key));\n    var cipher = crypto_1[\"default\"].createCipheriv(ALGORITHM, encryptionKey, iv);\n    cipher.setEncoding(\"hex\");\n    cipher.write(utils_1.stringify(value));\n    cipher.end();\n    var cipherText = cipher.read();\n    var hmac = crypto_1[\"default\"].createHmac(HMAC_ALGORITHM, encryptionKey);\n    hmac.update(cipherText);\n    hmac.update(iv.toString(\"hex\"));\n    return cipherText + \"$\" + iv.toString(\"hex\") + \"$\" + hmac.digest(\"hex\");\n}\nexports.encrypt = encrypt;\nfunction decrypt(value, key) {\n    var cipher = value.split(\"$\");\n    var iv = Buffer.from(cipher[1], \"hex\");\n    var encryptionKey = Buffer.from(getEncryptionKey(key));\n    var hmac = crypto_1[\"default\"].createHmac(HMAC_ALGORITHM, encryptionKey);\n    hmac.update(cipher[0]);\n    hmac.update(iv.toString(\"hex\"));\n    if (!constantTimeCompare(hmac.digest(\"hex\"), cipher[2])) {\n        throw new Error(\"Encrypted payload has been tampered with\");\n    }\n    var decipher = crypto_1[\"default\"].createDecipheriv(ALGORITHM, encryptionKey, iv);\n    var decryptedText = decipher.update(cipher[0], \"hex\");\n    var final = \"\" + decryptedText + decipher.final();\n    try {\n        return JSON.parse(final);\n    }\n    catch (err) {\n        return final;\n    }\n}\nexports.decrypt = decrypt;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}