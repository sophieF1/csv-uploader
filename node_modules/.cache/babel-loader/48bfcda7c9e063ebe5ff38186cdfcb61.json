{"ast":null,"code":"var _jsxFileName = \"/Users/shalks/Documents/dev/alphafx-csv-upload/src/pages/ImportCSV.js\";\nimport React, { useState } from 'react';\nimport { Importer, ImporterField } from 'react-csv-importer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fields = [{\n  name: 'Beneficiary ID',\n  label: 'BenID',\n  optional: false\n}, {\n  name: 'Payment Currency',\n  label: 'currency',\n  optional: false\n}, {\n  name: 'Payment Amount',\n  label: 'amount',\n  optional: false\n}, {\n  name: 'Payment Reference',\n  label: 'ref',\n  optional: false\n}];\nconst ImportCSV = async () => {\n  // add csv importer\n  /*#__PURE__*/_jsxDEV(Importer, {\n    chunkSize: 10000,\n    assumeNoHeaders: false,\n    restartable: false,\n    onStart: () => {\n      prepMyAppForIncomingData();\n    },\n    processChunk: async rows => {\n      for (const row of rows) {\n        await myAppMethod(row);\n      }\n    },\n    onComplete: () => {\n      showMyAppToastNotification();\n    },\n    onClose: () => {\n      goToMyAppNextPage();\n    },\n    children: [/*#__PURE__*/_jsxDEV(ImporterField, {\n      name: \"name\",\n      label: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ImporterField, {\n      name: \"email\",\n      label: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ImporterField, {\n      name: \"dob\",\n      label: \"Date of Birth\",\n      optional: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ImporterField, {\n      name: \"postalCode\",\n      label: \"Postal Code\",\n      optional: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = ImportCSV;\nexport default ImportCSV;\nvar _c;\n$RefreshReg$(_c, \"ImportCSV\");","map":{"version":3,"names":["React","useState","Importer","ImporterField","fields","name","label","optional","ImportCSV","prepMyAppForIncomingData","rows","row","myAppMethod","showMyAppToastNotification","goToMyAppNextPage"],"sources":["/Users/shalks/Documents/dev/alphafx-csv-upload/src/pages/ImportCSV.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Importer, ImporterField } from 'react-csv-importer'\n\n\nconst fields = [\n    {\n        name: 'Beneficiary ID',\n        label: 'BenID',\n        optional: false\n    },\n    {\n        name: 'Payment Currency',\n        label: 'currency',\n        optional: false\n    },\n    {\n        name: 'Payment Amount',\n        label: 'amount',\n        optional: false\n    },\n    {\n        name: 'Payment Reference',\n        label: 'ref',\n        optional: false\n    },\n];\n\n\nconst ImportCSV = async () => {\n   \n\n\n    // add csv importer\n    <Importer\n    chunkSize={10000}\n    assumeNoHeaders={false}\n    restartable={false}\n    onStart={() => {\n      prepMyAppForIncomingData();\n    }}\n    processChunk={async (rows) => {\n      for (const row of rows) {\n        await myAppMethod(row);\n      }\n    }}\n    onComplete={() => {\n      showMyAppToastNotification();\n    }}\n    onClose={() => {\n      goToMyAppNextPage();\n    }}\n  >\n    <ImporterField name=\"name\" label=\"Name\" />\n    <ImporterField name=\"email\" label=\"Email\" />\n    <ImporterField name=\"dob\" label=\"Date of Birth\" optional />\n    <ImporterField name=\"postalCode\" label=\"Postal Code\" optional />\n  </Importer>\n\n};\n\nexport default ImportCSV;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,aAAa,QAAQ,oBAAoB;AAAA;AAG5D,MAAMC,MAAM,GAAG,CACX;EACIC,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAE;AACd,CAAC,EACD;EACIF,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE,UAAU;EACjBC,QAAQ,EAAE;AACd,CAAC,EACD;EACIF,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE,QAAQ;EACfC,QAAQ,EAAE;AACd,CAAC,EACD;EACIF,IAAI,EAAE,mBAAmB;EACzBC,KAAK,EAAE,KAAK;EACZC,QAAQ,EAAE;AACd,CAAC,CACJ;AAGD,MAAMC,SAAS,GAAG,YAAY;EAI1B;EACA,qBAAC,QAAQ;IACT,SAAS,EAAE,KAAM;IACjB,eAAe,EAAE,KAAM;IACvB,WAAW,EAAE,KAAM;IACnB,OAAO,EAAE,MAAM;MACbC,wBAAwB,EAAE;IAC5B,CAAE;IACF,YAAY,EAAE,MAAOC,IAAI,IAAK;MAC5B,KAAK,MAAMC,GAAG,IAAID,IAAI,EAAE;QACtB,MAAME,WAAW,CAACD,GAAG,CAAC;MACxB;IACF,CAAE;IACF,UAAU,EAAE,MAAM;MAChBE,0BAA0B,EAAE;IAC9B,CAAE;IACF,OAAO,EAAE,MAAM;MACbC,iBAAiB,EAAE;IACrB,CAAE;IAAA,wBAEF,QAAC,aAAa;MAAC,IAAI,EAAC,MAAM;MAAC,KAAK,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAC1C,QAAC,aAAa;MAAC,IAAI,EAAC,OAAO;MAAC,KAAK,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5C,QAAC,aAAa;MAAC,IAAI,EAAC,KAAK;MAAC,KAAK,EAAC,eAAe;MAAC,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAG,eAC3D,QAAC,aAAa;MAAC,IAAI,EAAC,YAAY;MAAC,KAAK,EAAC,aAAa;MAAC,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACvD;AAEb,CAAC;AAAC,KA9BIN,SAAS;AAgCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}