{"ast":null,"code":"var _jsxFileName = \"/Users/shalks/Documents/dev/alphafx-csv-upload/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\n// import AddFile  from '../utils/AddFile.js';\nimport Table from './components/Table.js';\nimport { fixture } from '../test/data.js';\nimport styled from \"styled-components\";\n\n// import { data } from \"./data.js\";\n\n// const apiUrl = \"https://run.mocky.io/v3/cbca762d-3f84-4ae4-bb26-79fa774a6c72\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiUrl = \"\";\nconst Container = styled.div`\n    flex-grow: 1;\n`;\n_c = Container;\nconst Header = styled.header`\n    padding: 8px;\n    margin-left: auto;\n    margin-right: auto;\n    font-family: Calibri;\n`;\n_c2 = Header;\nconst Section = styled.div`\n    margin-left: auto;\n    margin-right: auto;\n`;\n_c3 = Section;\nconst Button = styled.button`\n    border-color: #1d8676;\n    background: #1d8676;\n    border-style: solid;\n    padding: 8px;\n    align-items: center;\n    font-weight: 700;\n    font-family: Calibri;\n    display: inline-flex;\n    line-height: 1.5;\n    border-top-left-radius: 0.4rem;\n    border-top-right-radius: 0.4rem;\n    border-bottom-right-radius: 0.4rem;\n    border-bottom-left-radius: 0.4rem;\n    color: white;\n    border-width: 0.1rem;\n    justify-content: center;\n    transition: 0.2s ease;\n    width: 10%;\n`;\n_c4 = Button;\nconst HomePage = () => {\n  _s();\n  // data state to store the API data. Its initial value is an empty array\n  const [data, setData] = useState([]);\n  const body = fixture; //fileUpload;\n  console.log(body);\n\n  // Using useEffect to call the API once mounted and set the data\n  useEffect(() => {\n    (async () => {\n      const result = await fetch(\"https://api.tvmaze.com/search/shows?q=snow\");\n      setData(result.data);\n    })();\n  });\n  const columns = useMemo(() => [{\n    // first group - TV Show\n    Header: \"TV Show\",\n    // First group columns\n    columns: [{\n      Header: \"Name\",\n      accessor: \"show.name\"\n    }, {\n      Header: \"Type\",\n      accessor: \"show.type\"\n    }]\n  }, {\n    // Second group - Details\n    Header: \"Details\",\n    // Second group columns\n    columns: [{\n      Header: \"Language\",\n      accessor: \"show.language\"\n    }, {\n      Header: \"Genre(s)\",\n      accessor: \"show.genres\"\n    }, {\n      Header: \"Runtime\",\n      accessor: \"show.runtime\"\n    }, {\n      Header: \"Status\",\n      accessor: \"show.status\"\n    }]\n  }], []);\n  const handleSubmit = async () => {\n    try {\n      const result = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      if (result.ok) {\n        console.log(result);\n      } else {\n        throw new Error();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: \"CSV File Uploader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          children: \"Import\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n_s(HomePage, \"WraXYNH1W1loa0Y6z20i0MNWuRQ=\");\n_c5 = HomePage;\nexport default HomePage;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Section\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Table","fixture","styled","apiUrl","Container","div","Header","header","Section","Button","button","HomePage","data","setData","body","console","log","result","fetch","columns","accessor","handleSubmit","method","headers","JSON","stringify","ok","Error","e"],"sources":["/Users/shalks/Documents/dev/alphafx-csv-upload/src/pages/HomePage.js"],"sourcesContent":["import React, {useState, useEffect, useMemo} from 'react';\n// import AddFile  from '../utils/AddFile.js';\nimport Table from './components/Table.js';\nimport { fixture } from '../test/data.js';\nimport styled from \"styled-components\";\n\n// import { data } from \"./data.js\";\n\n// const apiUrl = \"https://run.mocky.io/v3/cbca762d-3f84-4ae4-bb26-79fa774a6c72\";\nconst apiUrl = \"\";\n\nconst Container = styled.div`\n    flex-grow: 1;\n`;\n\nconst Header = styled.header`\n    padding: 8px;\n    margin-left: auto;\n    margin-right: auto;\n    font-family: Calibri;\n`;\n\nconst Section = styled.div`\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nconst Button = styled.button`\n    border-color: #1d8676;\n    background: #1d8676;\n    border-style: solid;\n    padding: 8px;\n    align-items: center;\n    font-weight: 700;\n    font-family: Calibri;\n    display: inline-flex;\n    line-height: 1.5;\n    border-top-left-radius: 0.4rem;\n    border-top-right-radius: 0.4rem;\n    border-bottom-right-radius: 0.4rem;\n    border-bottom-left-radius: 0.4rem;\n    color: white;\n    border-width: 0.1rem;\n    justify-content: center;\n    transition: 0.2s ease;\n    width: 10%;\n`;\n\n\nconst HomePage = () => {\n  // data state to store the API data. Its initial value is an empty array\n    const [data, setData] = useState([]);\n    const body = fixture; //fileUpload;\n    console.log(body);\n\n      // Using useEffect to call the API once mounted and set the data\n  useEffect(() => {\n    (async () => {\n      const result = await fetch(\"https://api.tvmaze.com/search/shows?q=snow\");\n      setData(result.data);\n    })();\n});\n\n    const columns = useMemo(\n        () => [\n          {\n            // first group - TV Show\n            Header: \"TV Show\",\n            // First group columns\n            columns: [\n              {\n                Header: \"Name\",\n                accessor: \"show.name\"\n              },\n              {\n                Header: \"Type\",\n                accessor: \"show.type\"\n              }\n            ]\n          },\n          {\n            // Second group - Details\n            Header: \"Details\",\n            // Second group columns\n            columns: [\n              {\n                Header: \"Language\",\n                accessor: \"show.language\"\n              },\n              {\n                Header: \"Genre(s)\",\n                accessor: \"show.genres\"\n              },\n              {\n                Header: \"Runtime\",\n                accessor: \"show.runtime\"\n              },\n              {\n                Header: \"Status\",\n                accessor: \"show.status\"\n              }\n            ]\n          }\n        ],\n        []\n      );\n\n    const handleSubmit = async () => {\n        try {\n            const result = await fetch(apiUrl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n            });\n\n            if (result.ok) {\n                console.log(result);\n            } else {\n                throw new Error();\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    return (\n\t\t<>\n\t\t\t<Container>\n                    <Header>\n                        CSV File Uploader\n                    </Header>  \n                    <Section>\n\n                    {/* <Table columns={columns} data={data} /> */}\n                        <Button onClick={handleSubmit}>Import</Button>\n                    </Section>  \n            </Container>\n\t\t</>\n\t)\n};\n\nexport default HomePage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}