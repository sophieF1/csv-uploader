{"ast":null,"code":"var _jsxFileName = \"/Users/shalks/Documents/dev/alphafx-csv-upload/src/pages/HomePage.js\";\nimport { Importer, ImporterField } from 'react-csv-importer';\n// include the widget CSS file whichever way your bundler supports it\nimport 'react-csv-importer/dist/index.css';\nimport { fixture } from '../test/fixture.js';\n// const apiUrl = \"https://run.mocky.io/v3/cbca762d-3f84-4ae4-bb26-79fa774a6c72\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiUrl = \"\";\nconst HomePage = () => {\n  const data = fixture; //fileUpload;\n  console.log(data);\n  const handleSubmit = async () => {\n    try {\n      const result = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (result.ok) {\n        console.log(result);\n      } else {\n        throw new Error();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  function showMyAppToastNotification() {}\n  function goToMyAppNextPage() {}\n  function myAppMethod() {}\n  function prepMyAppForIncomingData() {}\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Hello World\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"// add csv importer\", /*#__PURE__*/_jsxDEV(Importer, {\n        chunkSize: 10000,\n        assumeNoHeaders: false,\n        restartable: false,\n        onStart: () => {\n          prepMyAppForIncomingData();\n        },\n        processChunk: async rows => {\n          for (const row of rows) {\n            await myAppMethod(row);\n          }\n        },\n        onComplete: () => {\n          showMyAppToastNotification();\n        },\n        onClose: () => {\n          goToMyAppNextPage();\n        },\n        children: [/*#__PURE__*/_jsxDEV(ImporterField, {\n          name: \"name\",\n          label: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(ImporterField, {\n          name: \"email\",\n          label: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(ImporterField, {\n          name: \"dob\",\n          label: \"Date of Birth\",\n          optional: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(ImporterField, {\n          name: \"postalCode\",\n          label: \"Postal Code\",\n          optional: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["Importer","ImporterField","fixture","apiUrl","HomePage","data","console","log","handleSubmit","result","fetch","method","headers","body","JSON","stringify","ok","Error","e","showMyAppToastNotification","goToMyAppNextPage","myAppMethod","prepMyAppForIncomingData","rows","row"],"sources":["/Users/shalks/Documents/dev/alphafx-csv-upload/src/pages/HomePage.js"],"sourcesContent":["import { Importer, ImporterField } from 'react-csv-importer';\n// include the widget CSS file whichever way your bundler supports it\nimport 'react-csv-importer/dist/index.css';\n\nimport { fixture } from '../test/fixture.js';\n// const apiUrl = \"https://run.mocky.io/v3/cbca762d-3f84-4ae4-bb26-79fa774a6c72\";\nconst apiUrl = \"\";\n\n\nconst HomePage = () => {\n    \n    \n    const data = fixture;//fileUpload;\n    console.log(data);\n\n\n    const handleSubmit = async () => {\n        try {\n            const result = await fetch(apiUrl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            });\n\n            if (result.ok) {\n                console.log(result);\n            } else {\n                throw new Error();\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    };\n    function showMyAppToastNotification() {}\n    function goToMyAppNextPage() {}\n    function myAppMethod() {}\n    function prepMyAppForIncomingData() {}\n\n\n\n    return (\n\t\t<>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div>\n\t\t\t\t\t<h4>Hello World</h4>\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{(\n\t\t\t\t<>\n\t\t\t\t\n\n    // add csv importer\n    <Importer\n    chunkSize={10000}\n    assumeNoHeaders={false}\n    restartable={false}\n    onStart={() => {\n      prepMyAppForIncomingData();\n    }}\n    processChunk={async (rows) => {\n      for (const row of rows) {\n        await myAppMethod(row);\n      }\n    }}\n    onComplete={() => {\n      showMyAppToastNotification();\n    }}\n    onClose={() => {\n      goToMyAppNextPage();\n    }}\n  >\n    <ImporterField name=\"name\" label=\"Name\" />\n    <ImporterField name=\"email\" label=\"Email\" />\n    <ImporterField name=\"dob\" label=\"Date of Birth\" optional />\n    <ImporterField name=\"postalCode\" label=\"Postal Code\" optional />\n  </Importer>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t)\n};\n\nexport default HomePage;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,aAAa,QAAQ,oBAAoB;AAC5D;AACA,OAAO,mCAAmC;AAE1C,SAASC,OAAO,QAAQ,oBAAoB;AAC5C;AAAA;AAAA;AACA,MAAMC,MAAM,GAAG,EAAE;AAGjB,MAAMC,QAAQ,GAAG,MAAM;EAGnB,MAAMC,IAAI,GAAGH,OAAO,CAAC;EACrBI,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAGjB,MAAMG,YAAY,GAAG,YAAY;IAC7B,IAAI;MACA,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAACP,MAAM,EAAE;QAC/BQ,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,IAAI;MAC7B,CAAC,CAAC;MAEF,IAAII,MAAM,CAACO,EAAE,EAAE;QACXV,OAAO,CAACC,GAAG,CAACE,MAAM,CAAC;MACvB,CAAC,MAAM;QACH,MAAM,IAAIQ,KAAK,EAAE;MACrB;IACJ,CAAC,CAAC,OAAOC,CAAC,EAAE;MACRZ,OAAO,CAACC,GAAG,CAACW,CAAC,CAAC;IAClB;EACJ,CAAC;EACD,SAASC,0BAA0B,GAAG,CAAC;EACvC,SAASC,iBAAiB,GAAG,CAAC;EAC9B,SAASC,WAAW,GAAG,CAAC;EACxB,SAASC,wBAAwB,GAAG,CAAC;EAIrC,oBACF;IAAA,wBACC;MAAK,SAAS,EAAC,KAAK;MAAA,uBACnB;QAAA,uBACC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAoB;QAAA;QAAA;QAAA;MAAA;IAEf;MAAA;MAAA;MAAA;IAAA,QACD,eAEL;MAAA,+CAIA,QAAC,QAAQ;QACT,SAAS,EAAE,KAAM;QACjB,eAAe,EAAE,KAAM;QACvB,WAAW,EAAE,KAAM;QACnB,OAAO,EAAE,MAAM;UACbA,wBAAwB,EAAE;QAC5B,CAAE;QACF,YAAY,EAAE,MAAOC,IAAI,IAAK;UAC5B,KAAK,MAAMC,GAAG,IAAID,IAAI,EAAE;YACtB,MAAMF,WAAW,CAACG,GAAG,CAAC;UACxB;QACF,CAAE;QACF,UAAU,EAAE,MAAM;UAChBL,0BAA0B,EAAE;QAC9B,CAAE;QACF,OAAO,EAAE,MAAM;UACbC,iBAAiB,EAAE;QACrB,CAAE;QAAA,wBAEF,QAAC,aAAa;UAAC,IAAI,EAAC,MAAM;UAAC,KAAK,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAG,eAC1C,QAAC,aAAa;UAAC,IAAI,EAAC,OAAO;UAAC,KAAK,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAG,eAC5C,QAAC,aAAa;UAAC,IAAI,EAAC,KAAK;UAAC,KAAK,EAAC,eAAe;UAAC,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAG,eAC3D,QAAC,aAAa;UAAC,IAAI,EAAC,YAAY;UAAC,KAAK,EAAC,aAAa;UAAC,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACvD;IAAA,gBACN;EAAA,gBAEF;AAEL,CAAC;AAAC,KA1EIhB,QAAQ;AA4Ed,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}